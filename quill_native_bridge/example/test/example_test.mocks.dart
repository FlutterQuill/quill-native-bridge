// Mocks generated by Mockito 5.4.4 from annotations
// in quill_native_bridge_example/test/example_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:typed_data' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:quill_native_bridge_platform_interface/quill_native_bridge_platform_interface.dart'
    as _i2;
import 'package:quill_native_bridge_platform_interface/src/platform_feature.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [QuillNativeBridgePlatform].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuillNativeBridgePlatform extends _i1.Mock
    implements _i2.QuillNativeBridgePlatform {
  MockQuillNativeBridgePlatform() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> isSupported(_i4.QuillNativeBridgeFeature? feature) =>
      (super.noSuchMethod(
        Invocation.method(
          #isSupported,
          [feature],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> isIOSSimulator() => (super.noSuchMethod(
        Invocation.method(
          #isIOSSimulator,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<String?> getClipboardHtml() => (super.noSuchMethod(
        Invocation.method(
          #getClipboardHtml,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<void> copyHtmlToClipboard(String? html) => (super.noSuchMethod(
        Invocation.method(
          #copyHtmlToClipboard,
          [html],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> copyImageToClipboard(_i5.Uint8List? imageBytes) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyImageToClipboard,
          [imageBytes],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i5.Uint8List?> getClipboardImage() => (super.noSuchMethod(
        Invocation.method(
          #getClipboardImage,
          [],
        ),
        returnValue: _i3.Future<_i5.Uint8List?>.value(),
      ) as _i3.Future<_i5.Uint8List?>);

  @override
  _i3.Future<_i5.Uint8List?> getClipboardGif() => (super.noSuchMethod(
        Invocation.method(
          #getClipboardGif,
          [],
        ),
        returnValue: _i3.Future<_i5.Uint8List?>.value(),
      ) as _i3.Future<_i5.Uint8List?>);

  @override
  _i3.Future<List<String>> getClipboardFiles() => (super.noSuchMethod(
        Invocation.method(
          #getClipboardFiles,
          [],
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);

  @override
  _i3.Future<void> openGalleryApp() => (super.noSuchMethod(
        Invocation.method(
          #openGalleryApp,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveImageToGallery(
    _i5.Uint8List? imageBytes, {
    required String? name,
    required String? extension,
    required String? albumName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveImageToGallery,
          [imageBytes],
          {
            #name: name,
            #extension: extension,
            #albumName: albumName,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String?> saveImage(
    _i5.Uint8List? imageBytes, {
    required String? name,
    required String? extension,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveImage,
          [imageBytes],
          {
            #name: name,
            #extension: extension,
          },
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);
}
